name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, linux, darwin]
        goarch: [amd64, 386]
        exclude:
          # Exclude i386 on darwin.
          - goarch: 386
            goos: darwin
        include:
          # BEIGIN MacOS ARM64
          - goos: darwin
            goarch: arm64
          # END MacOS ARM64
          # BEGIN Linux ARM 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          # END Linux ARM 6 7
          # BEGIN Android ARM 8
          - goos: android
            goarch: arm64
          # END Android ARM 8
          # Windows ARM
          - goos: windows
            goarch: arm64
          # BEGIN Other architectures
          # BEGIN riscv64 & ARM64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: riscv64
          # END riscv64 & ARM64
          # BEGIN MIPS
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips
          # END MIPS
          # END Other architectures
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Show workflow information 
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true

      - name: Get project dependencies
        run: go mod download
        working-directory: ./commands/encrypt
      
      - name: Build hugo encrypt
        run: |
          go build -v -o hugo-encrypt -trimpath -ldflags "-s -w -buildid=" .
        working-directory: ./commands/encrypt

      - name: Rename Windows hugo encrypt
        if: matrix.goos == 'windows'
        working-directory: ./commands/encrypt
        run: |
          mv hugo-encrypt hugo-encrypt.exe

      - name: Change the name
        working-directory: ./commands/encrypt
        run: |
          mv hugo-encrypt hugo-encrypt-${{ env.ASSET_NAME }} || mv hugo-encrypt.exe hugo-encrypt-${{ env.ASSET_NAME }}.exe

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hugo-encrypt-${{ env.ASSET_NAME }}
          path: |
            ./commands/encrypt/hugo-encrypt-${{ env.ASSET_NAME }}*

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./commands/encrypt/hugo-encrypt-${{ env.ASSET_NAME }}*
          tag: ${{ github.ref }}
          file_glob: true
